{"version":3,"file":"static/js/717.60999404.chunk.js","mappings":"iWAuIA,EAhHa,WACX,IAAQA,GAAMC,EAAAA,EAAAA,MAAND,EAER,GAA0BE,EAAAA,EAAAA,WAAS,GAAM,eAAlCC,EAAK,KAAEC,EAAQ,KAChBC,GAAWC,EAAAA,EAAAA,KAEjB,GAKIC,EAAAA,EAAAA,IAAgB,CAClBC,KAAM,aALNC,EAAY,EAAZA,aACAC,EAAQ,EAARA,SACAC,EAAK,EAALA,MAAM,EAAD,EACLC,UAAaC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAUvB,GAAwCZ,EAAAA,EAAAA,WAAS,GAAM,eAAhDa,EAAY,KAAEC,EAAe,KAIpC,OACE,UAACC,EAAA,EAAG,CAACC,SAAU,IAAKC,OAAO,SAAQ,WACjC,SAACC,EAAA,EAAU,CACTC,QAAQ,KACRC,UAAU,IACVC,UAAU,SACVC,aAAc,EAAE,SAEPxB,EAARG,EAAU,WAAgB,YAE7B,UAACc,EAAA,EAAG,CACFQ,SAAUhB,GApBwB,SAAAiB,GACtCrB,GAASsB,EAAAA,EAAAA,GAAQ,CAAEC,QAAQ,EAAMC,SAAUH,EAAKI,YAChDnB,GACF,IAkBMW,UAAU,OACVS,QAAQ,OACRC,cAAc,SACdC,WAAW,SAAQ,WAEnB,SAACC,EAAA,GAAS,kBACJxB,EAAS,WAAY,CACvByB,UAAU,EACVC,UAAW,CACTC,MAAO,EACPC,QAAS,+CAEX,IACFC,KAAK,OACLlB,QAAQ,WACRmB,MAAOxC,EAAE,QACTyC,MAAO5B,EAAOiB,SAAW,QAAU,UACnCY,WAAS,KAEV7B,EAAOiB,WACN,SAACV,EAAA,EAAU,CAACC,QAAQ,UAAUoB,MAAM,QAAO,SACxC5B,EAAOiB,SAASQ,WAIrB,UAACK,EAAA,EAAW,CAACtB,QAAQ,WAAWuB,GAAI,CAAEC,EAAG,EAAGC,MAAO,QAAS,WAC1D,SAACC,EAAA,EAAU,CAACN,MAAO5B,EAAOmC,SAAW,QAAU,UAAU,SACtDhD,EAAE,eAEL,SAACiD,EAAA,GAAa,gBACZP,WAAS,GACLhC,EAAS,WAAY,CACvByB,UAAU,EACVC,UAAW,CACTC,MAAO,EACPC,QAAS,mDAEX,IACFC,KAAMxB,EAAe,OAAS,WAC9BmC,cACE,SAACC,EAAA,EAAc,CAACC,SAAS,MAAK,UAC5B,SAACC,EAAA,EAAU,CAACC,QAvDM,WAAH,OAAStC,GAAgB,SAAAuC,GAAI,OAAKA,CAAI,GAAE,EAuDV,SAC1CxC,GAAe,SAACyC,EAAA,EAAa,KAAM,SAACC,EAAA,EAAU,QAIrDjB,MAAOxC,EAAE,YACTyC,MAAO5B,EAAOmC,SAAW,QAAU,aAEpCnC,EAAOmC,WACN,SAAC5B,EAAA,EAAU,CAACC,QAAQ,UAAUoB,MAAM,QAAO,SACxC5B,EAAOmC,SAASV,cAKvB,SAACoB,EAAA,EAAM,CACLnB,KAAK,SACLlB,QAAQ,WACRsC,MAAO,CAAEb,MAAO,IAAK3B,OAAQ,aAC7ByC,UAAW9C,EAAQ,SAEVd,EAARG,EAAU,WAAgB,YAE7B,SAACuD,EAAA,EAAM,CACLJ,QAAS,kBAAMlD,GAAUD,EAAM,EAC/B0D,KAAK,QACLF,MAAO,CAAExC,OAAQ,UAAW,SAEnBnB,EAARG,EAAU,UAAe,kBAKpC,ECzHA,EARiB,WACf,OACE,SAAC2D,EAAA,EAAS,WACR,SAAC,EAAI,KAGX,C","sources":["components/form/Form.tsx","pages/auth-page/Auth.tsx"],"sourcesContent":["import { VisibilityOff, Visibility } from '@mui/icons-material';\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport { useForm, SubmitHandler } from 'react-hook-form';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { setAuth } from '../../redux/auth/authSlice';\r\nimport { useAppDispatch } from '../../redux/hooks';\r\n\r\ntype Inputs = {\r\n  username: string;\r\n  password: string;\r\n};\r\n\r\nconst Form = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const [isReg, setIsReg] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    reset,\r\n    formState: { errors, isValid },\r\n  } = useForm<Inputs>({\r\n    mode: 'onChange',\r\n  });\r\n\r\n  const onSubmit: SubmitHandler<Inputs> = data => {\r\n    dispatch(setAuth({ isAuth: true, userName: data.username }));\r\n    reset();\r\n  };\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const handleClickShowPassword = () => setShowPassword(show => !show);\r\n\r\n  return (\r\n    <Box maxWidth={400} margin=\"0 auto\">\r\n      <Typography\r\n        variant=\"h4\"\r\n        component=\"p\"\r\n        textAlign=\"center\"\r\n        marginBottom={2}\r\n      >\r\n        {isReg ? t('register') : t('login')}\r\n      </Typography>\r\n      <Box\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        component=\"form\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n      >\r\n        <TextField\r\n          {...register('username', {\r\n            required: true,\r\n            minLength: {\r\n              value: 3,\r\n              message: 'Name should be minimum 6 characters long',\r\n            },\r\n          })}\r\n          type=\"text\"\r\n          variant=\"outlined\"\r\n          label={t('name')}\r\n          color={errors.username ? 'error' : 'primary'}\r\n          fullWidth\r\n        />\r\n        {errors.username && (\r\n          <Typography variant=\"caption\" color=\"error\">\r\n            {errors.username.message}\r\n          </Typography>\r\n        )}\r\n\r\n        <FormControl variant=\"outlined\" sx={{ m: 1, width: '100%' }}>\r\n          <InputLabel color={errors.password ? 'error' : 'primary'}>\r\n            {t('password')}\r\n          </InputLabel>\r\n          <OutlinedInput\r\n            fullWidth\r\n            {...register('password', {\r\n              required: true,\r\n              minLength: {\r\n                value: 6,\r\n                message: 'Password should be minimum 6 characters long',\r\n              },\r\n            })}\r\n            type={showPassword ? 'text' : 'password'}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton onClick={handleClickShowPassword}>\r\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            label={t('password')}\r\n            color={errors.password ? 'error' : 'primary'}\r\n          />\r\n          {errors.password && (\r\n            <Typography variant=\"caption\" color=\"error\">\r\n              {errors.password.message}\r\n            </Typography>\r\n          )}\r\n        </FormControl>\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"outlined\"\r\n          style={{ width: 150, margin: '12px auto' }}\r\n          disabled={!isValid}\r\n        >\r\n          {isReg ? t('register') : t('login')}\r\n        </Button>\r\n        <Button\r\n          onClick={() => setIsReg(!isReg)}\r\n          size=\"small\"\r\n          style={{ margin: '0 auto' }}\r\n        >\r\n          {isReg ? t('sign-in') : t('sign-up')}\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { Container } from '@mui/material';\r\nimport React, { FC } from 'react';\r\nimport Form from '../../components/form/Form';\r\n\r\nconst Auth: FC = () => {\r\n  return (\r\n    <Container>\r\n      <Form />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["t","useTranslation","useState","isReg","setIsReg","dispatch","useAppDispatch","useForm","mode","handleSubmit","register","reset","formState","errors","isValid","showPassword","setShowPassword","Box","maxWidth","margin","Typography","variant","component","textAlign","marginBottom","onSubmit","data","setAuth","isAuth","userName","username","display","flexDirection","alignItems","TextField","required","minLength","value","message","type","label","color","fullWidth","FormControl","sx","m","width","InputLabel","password","OutlinedInput","endAdornment","InputAdornment","position","IconButton","onClick","show","VisibilityOff","Visibility","Button","style","disabled","size","Container"],"sourceRoot":""}